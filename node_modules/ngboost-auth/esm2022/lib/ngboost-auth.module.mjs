import { NgModule } from '@angular/core';
import { AuthService } from './auth.service';
import { CookieService } from './cookie.service';
import { JwtTokenInterceptor } from './jwtTokenInterceptor.service';
import { IsLoggedService } from './routeGuards/isLogged.service';
import { HasRoleService } from './routeGuards/hasRole.service';
import { AutologinService } from './routeGuards/autoLogin.service';
import * as i0 from "@angular/core";
export class NgboostAuthModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.3", ngImport: i0, type: NgboostAuthModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.3", ngImport: i0, type: NgboostAuthModule }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.3", ngImport: i0, type: NgboostAuthModule, providers: [
            AuthService,
            CookieService,
            JwtTokenInterceptor,
            IsLoggedService,
            HasRoleService,
            AutologinService,
        ] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.3", ngImport: i0, type: NgboostAuthModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [],
                    declarations: [],
                    providers: [
                        AuthService,
                        CookieService,
                        JwtTokenInterceptor,
                        IsLoggedService,
                        HasRoleService,
                        AutologinService,
                    ],
                    exports: []
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmdib29zdC1hdXRoLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25nYm9vc3QtYXV0aC9zcmMvbGliL25nYm9vc3QtYXV0aC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV6QyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNqRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUNBQWlDLENBQUM7O0FBZ0JuRSxNQUFNLE9BQU8saUJBQWlCOzhHQUFqQixpQkFBaUI7K0dBQWpCLGlCQUFpQjsrR0FBakIsaUJBQWlCLGFBVmpCO1lBQ1QsV0FBVztZQUNYLGFBQWE7WUFDYixtQkFBbUI7WUFDbkIsZUFBZTtZQUNmLGNBQWM7WUFDZCxnQkFBZ0I7U0FDakI7OzJGQUdVLGlCQUFpQjtrQkFiN0IsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUUsRUFBRTtvQkFDWCxZQUFZLEVBQUUsRUFBRTtvQkFDaEIsU0FBUyxFQUFFO3dCQUNULFdBQVc7d0JBQ1gsYUFBYTt3QkFDYixtQkFBbUI7d0JBQ25CLGVBQWU7d0JBQ2YsY0FBYzt3QkFDZCxnQkFBZ0I7cUJBQ2pCO29CQUNELE9BQU8sRUFBRSxFQUFFO2lCQUNaIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQXV0aFNlcnZpY2UgfSBmcm9tICcuL2F1dGguc2VydmljZSc7XG5pbXBvcnQgeyBDb29raWVTZXJ2aWNlIH0gZnJvbSAnLi9jb29raWUuc2VydmljZSc7XG5pbXBvcnQgeyBKd3RUb2tlbkludGVyY2VwdG9yIH0gZnJvbSAnLi9qd3RUb2tlbkludGVyY2VwdG9yLnNlcnZpY2UnO1xuaW1wb3J0IHsgSXNMb2dnZWRTZXJ2aWNlIH0gZnJvbSAnLi9yb3V0ZUd1YXJkcy9pc0xvZ2dlZC5zZXJ2aWNlJztcbmltcG9ydCB7IEhhc1JvbGVTZXJ2aWNlIH0gZnJvbSAnLi9yb3V0ZUd1YXJkcy9oYXNSb2xlLnNlcnZpY2UnO1xuaW1wb3J0IHsgQXV0b2xvZ2luU2VydmljZSB9IGZyb20gJy4vcm91dGVHdWFyZHMvYXV0b0xvZ2luLnNlcnZpY2UnO1xuXG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtdLFxuICBkZWNsYXJhdGlvbnM6IFtdLFxuICBwcm92aWRlcnM6IFtcbiAgICBBdXRoU2VydmljZSxcbiAgICBDb29raWVTZXJ2aWNlLFxuICAgIEp3dFRva2VuSW50ZXJjZXB0b3IsXG4gICAgSXNMb2dnZWRTZXJ2aWNlLFxuICAgIEhhc1JvbGVTZXJ2aWNlLFxuICAgIEF1dG9sb2dpblNlcnZpY2UsXG4gIF0sXG4gIGV4cG9ydHM6IFtdXG59KVxuZXhwb3J0IGNsYXNzIE5nYm9vc3RBdXRoTW9kdWxlIHsgfVxuIl19