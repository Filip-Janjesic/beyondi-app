import { Observable } from 'rxjs';
import { HttpClient } from '@angular/common/http';
import { Router } from '@angular/router';
import { CookieService } from './cookie.service';
import * as i0 from "@angular/core";
export interface Credentials {
    username: string;
    password: string;
}
export interface LoggedUser {
    first_name: string;
    last_name: string;
    address?: string;
    city?: string;
    country?: string;
    phone?: string;
    email: string;
    website?: string;
    misc?: any;
    username: string;
    password?: string;
    role: string;
    is_active?: boolean;
}
export declare class AuthService {
    private http;
    private cookieService;
    private r;
    private auth_urls;
    jwtToken: string;
    private loggedUser;
    private cookieOpts;
    constructor(http: HttpClient, cookieService: CookieService, r: Router, auth_urls: any);
    /**
     * Login with username and password
     * @param creds // credentials object {username: xxx, password: xxx}
     * @return Observable
     */
    login(creds: Credentials): Observable<any>;
    /**
     * Logout
     * @return Observable
     */
    logout(): void;
    /**
     * Get logged user info (from global variables or cookie)
     * @return object - {first_name: , last_name: , ...}
     */
    getLoggedUserInfo(): LoggedUser;
    /**
     * Get JWT token from cookie
     * @return string - JWT eyJhbGciOiJIUzI1NiIsInR...
     */
    getJWTtoken(): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<AuthService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<AuthService>;
}
